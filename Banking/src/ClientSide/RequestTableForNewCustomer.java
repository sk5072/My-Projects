/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ClientSide;

import static com.sun.xml.internal.fastinfoset.alphabet.BuiltInRestrictedAlphabets.table;
import java.rmi.RemoteException;
import java.sql.ResultSet;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Sunil
 */
public class RequestTableForNewCustomer extends javax.swing.JFrame {

    /**
     * Creates new form RequestTableForNewCustomer
     */
    String username, who;

    public RequestTableForNewCustomer() {
        initComponents();

    }

    public RequestTableForNewCustomer(String username, String who) {
        initComponents();
        this.username = username;
        this.who = who;
    }

    void showTable() throws RemoteException {
        ClientStub client = new ClientStub();
        Vector v = new Vector();
        v = client.stub.returNewCustomerTable();
        if (v.isEmpty()) {
            JOptionPane.showMessageDialog(this, "No new user has requested.");
            if (who.equals("employee")) {
                this.setVisible(false);
                Employee e = new Employee(username, who);
                e.setVisible(true);
            } else {
                this.setVisible(false);
                Customer c = new Customer(username, who);
                c.setVisible(true);
            }
        } else {
            DefaultTableModel d = (DefaultTableModel) tblUser.getModel();
            d.setRowCount(0);
            for (int i = 0; i < v.size(); i++) {
                Vector v1 = new Vector();
                v1 = (Vector) v.get(i);
                d.addRow(v1);
            }
            this.setVisible(true);
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblUser = new javax.swing.JTable();
        approv = new javax.swing.JButton();
        back = new javax.swing.JButton();
        reject = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tblUser.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Name", "Mobile", "Address", "Pincode", "Date of Birth", "Aadhar", "Type", "Email"
            }
        ));
        jScrollPane1.setViewportView(tblUser);

        approv.setText("Approv");
        approv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                approvActionPerformed(evt);
            }
        });

        back.setText("Back");
        back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backActionPerformed(evt);
            }
        });

        reject.setText("Reject");
        reject.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rejectActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(196, 196, 196)
                .addComponent(back)
                .addGap(32, 32, 32)
                .addComponent(approv)
                .addGap(31, 31, 31)
                .addComponent(reject)
                .addContainerGap(682, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(approv)
                    .addComponent(back)
                    .addComponent(reject))
                .addContainerGap(15, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void approvActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_approvActionPerformed
        // TODO add your handling code here:
        boolean set;

        String remarks;

        int column = 0;
        int value = 0;
        String email = null, subject, body;
        int row = tblUser.getSelectedRow();
        if (row < 0) {
            JOptionPane.showMessageDialog(null, "PLease select customer from table.");
        } else {
            value = Integer.parseInt(tblUser.getModel().getValueAt(row, column).toString());
            email = (tblUser.getModel().getValueAt(row, 8).toString());
//            JOptionPane.showMessageDialog(this, email);

        }
        if (row < 0) {
//            JOptionPane.showMessageDialog(null, "PLease select customer from table.");
        } else {
            try {
                ClientStub client = new ClientStub();
                set = client.stub.checkInDeletedCustomer(value);
                if (set == true) {
                    int input = JOptionPane.showConfirmDialog(null, "Customer already deleted account Still want to approve?");
                    if (input == 0) {
                        set = client.stub.approveNewCustomerAndRegisterNewCustomer(value, username);
                        if (set == true) {
                            JOptionPane.showMessageDialog(this, "Successfully Approved.");
                            DefaultTableModel model = (DefaultTableModel) tblUser.getModel();
                            model.removeRow(row);

                            subject = "Activated.";
                            body = "Your Account successfully activated.\n Your username and Account no will be your adhaar number.";
                            SendEmail em = new SendEmail();
                            try {
                                boolean result = em.sendEmail(email, subject, body);
                                em = null;
                            } catch (Exception ex) {
                                Logger.getLogger(Customer.class.getName()).log(Level.SEVERE, null, ex);
                            }
                        }
                    }

                } else {
                    set = client.stub.approveNewCustomerAndRegisterNewCustomer(value, username);
                    if (set == true) {
                        JOptionPane.showMessageDialog(this, "Successfullt Approved.");
                        DefaultTableModel model = (DefaultTableModel) tblUser.getModel();
                        model.removeRow(row);

                        subject = "Activated.";
                        body = "Your Account successfully activated.\nYour adhaar number will be your username.";
                        SendEmail em = new SendEmail();
                        try {
                            boolean result = em.sendEmail(email, subject, body);
                            em = null;
                        } catch (Exception ex) {
                            Logger.getLogger(Customer.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    }
                }
            } catch (Exception e) {
                System.out.println("In approve button at RequestTableForNewCustomer" + e);
            }

        }
    }//GEN-LAST:event_approvActionPerformed

    private void backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backActionPerformed
        // TODO add your handling code here:
        if (who.equals("employee")) {
            this.setVisible(false);
            Employee e = new Employee(username, who);
            e.setVisible(true);
        } else {
            this.setVisible(false);
            Customer c = new Customer(username, who);
            c.setVisible(true);
        }
    }//GEN-LAST:event_backActionPerformed

    private void rejectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rejectActionPerformed
        boolean result = false;
        int column = 0;
        int value = 0;
        String email = null, subject, body;
        int row = tblUser.getSelectedRow();
//        int value = Integer.parseInt(tblUser.getModel().getValueAt(row, column).toString());
        if (row < 0) {
            JOptionPane.showMessageDialog(null, "PLease select customer from table.");
        } else {
            value = Integer.parseInt(tblUser.getModel().getValueAt(row, column).toString());
            email = (tblUser.getModel().getValueAt(row, 8).toString());
        }
        if (row < 0) {
//            JOptionPane.showMessageDialog(null, "Please select Row.");
        } else {
            ClientStub client = new ClientStub();
            try {
                result = client.stub.RejectCustomer(value);
            } catch (RemoteException ex) {
                Logger.getLogger(RequestTableForNewCustomer.class.getName()).log(Level.SEVERE, null, ex);
            }
            if (result) {

                subject = "Rejected.";
                body = "Your Account has been rejected by bank.";
                SendEmail em = new SendEmail();
                try {
                    result = em.sendEmail(email, subject, body);
                    em = null;
                } catch (Exception ex) {
                    Logger.getLogger(Customer.class.getName()).log(Level.SEVERE, null, ex);
                }

                JOptionPane.showMessageDialog(null, "Successfully Rejected.");
                DefaultTableModel model = (DefaultTableModel) tblUser.getModel();
                model.removeRow(row);
            } else {
                JOptionPane.showMessageDialog(null, "Rejection Failed.");
            }
        }

    }//GEN-LAST:event_rejectActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RequestTableForNewCustomer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RequestTableForNewCustomer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RequestTableForNewCustomer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RequestTableForNewCustomer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RequestTableForNewCustomer().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton approv;
    private javax.swing.JButton back;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton reject;
    private javax.swing.JTable tblUser;
    // End of variables declaration//GEN-END:variables
}
